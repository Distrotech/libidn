<!doctype book PUBLIC "-//Davenport//DTD DocBook V3.0//EN" [
<!ENTITY libidn-stringprep SYSTEM "stringprep.sgml">
<!ENTITY libidn-stringprep-generic SYSTEM "stringprep_generic.sgml">
<!ENTITY libidn-stringprep-kerberos5 SYSTEM "stringprep_kerberos5.sgml">
<!ENTITY libidn-stringprep-iscsi SYSTEM "stringprep_iscsi.sgml">
<!ENTITY libidn-stringprep-nameprep SYSTEM "stringprep_nameprep.sgml">
<!ENTITY libidn-stringprep-plain SYSTEM "stringprep_plain.sgml">
<!ENTITY libidn-stringprep-xmpp SYSTEM "stringprep_xmpp.sgml">
<!ENTITY libidn-punycode SYSTEM "punycode.sgml">
<!ENTITY libidn-idna SYSTEM "idna.sgml">
]>
<book id="index">
  <bookinfo>
    <title>GNU Libidn API Reference Manual</title>
  </bookinfo>

  <chapter>
    <title>GNU Libidn API Reference Manual</title>

    <para>
GNU Libidn is an implementation of the Stringprep, Punycode and IDNA
specifications defined by the IETF Internationalized Domain Names
(IDN) working group, used for internationalized domain names.  It is
available under the GNU Lesser General Public License.  Currently the
iSCSI, Kerberos 5, Nameprep, SASL and XMPP Stringprep profiles are
supported.
    </para>
    <para>
The library contains a generic Stringprep implementation (including
Unicode 3.2 NFKC normalization, table mapping of characters, and
Bidirectional Character handling), a few Stringprep profiles, and an
implementation of the functionality defined by Punycode and IDNA.
    </para>
    <para>
The Stringprep API consists of two main functions, one for converting
data from the system's native representation into UTF-8, and one
function to perform the Stringprep processing.  Each stringprep
profile has a corresponding CPP macro.  Adding a new Stringprep
profile for your application within the API is straightforward.  The
Punycode API consists of one encoding function and one decoding
function.  The IDNA API consists of the ToASCII and ToUnicode
functions, as well as an high-level interface for converting entire
domain names to and from the ACE encoded form.
    </para>
    <para>
The library is used by forthcoming network applications to process
user names and passwords before they are input to cryptographic
operations.  Libidn can be built into GNU Libc to enable a new
getaddrinfo() flag for system-wide IDN processing.
    </para>
    <para>
GNU Libidn is developed for the GNU/Linux system, but runs on over 20
Unix platforms (including Solaris, IRIX, AIX, and Tru64) and Windows.
    </para>

    &libidn-stringprep;
    &libidn-stringprep-generic;
    &libidn-stringprep-iscsi;
    &libidn-stringprep-kerberos5;
    &libidn-stringprep-nameprep;
    &libidn-stringprep-plain;
    &libidn-stringprep-xmpp;
    &libidn-punycode;
    &libidn-idna;
  </chapter>
</book>
