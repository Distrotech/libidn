<!doctype book PUBLIC "-//Davenport//DTD DocBook V3.0//EN" [
<!ENTITY libidn-idna SYSTEM "idna.sgml">
<!ENTITY libidn-stringprep SYSTEM "stringprep.sgml">
<!ENTITY libidn-punycode SYSTEM "punycode.sgml">
]>
<book id="index">
  <bookinfo>
    <title>GNU Libidn API Reference Manual</title>
  </bookinfo>

  <chapter>
    <title>GNU Libidn API Reference Manual</title>

    <para>
      GNU Libidn is an implementation of the Stringprep, Punycode and IDNA
      specifications defined by the IETF Internationalized Domain Names
      (IDN) working group, used for internationalized domain names.  The
      package is available under the GNU Lesser General Public License.
    </para>
    <para>
      The library contains a generic Stringprep implementation that does
      Unicode 3.2 NFKC normalization, mapping and prohibitation of
      characters, and bidirectional character handling.  Profiles for iSCSI,
      Kerberos 5, Nameprep, SASL and XMPP are included.  Punycode and ASCII
      Compatible Encoding (ACE) via IDNA are supported.
    </para>
    <para>
      The Stringprep API consists of two main functions, one for converting
      data from the system's native representation into UTF-8, and one
      function to perform the Stringprep processing.  Adding a new
      Stringprep profile for your application within the API is
      straightforward.  The Punycode API consists of one encoding function
      and one decoding function.  The IDNA API consists of the ToASCII and
      ToUnicode functions, as well as an high-level interface for converting
      entire domain names to and from the ACE encoded form.
    </para>
    <para>
      The library is used by, e.g., GNU SASL and Shishi to process user
      names and passwords.  Libidn can be built into GNU Libc to enable a
      new system-wide getaddrinfo flag for IDN processing.
    </para>
    <para>
      Libidn is developed for the GNU/Linux system, but runs on over 20
      platforms including most major Unix platforms and Windows, and many
      kind of devices including iPAQ handhelds and S/390 mainframes.
      Libidn is written in C and (parts of) the API is accessible from C,
      C++, Emacs Lisp, Python and Java.
    </para>

    &libidn-stringprep;
    &libidn-punycode;
    &libidn-idna;
  </chapter>
</book>
